package com.your.package;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.TestPropertySource;

import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.ResultSet;

import static org.assertj.core.api.Assertions.assertThat;

@SpringBootTest
@TestPropertySource(properties = {
        "spring.datasource.url=jdbc:h2:mem:testdb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;INIT=CREATE SCHEMA IF NOT EXISTS plutus_ecollection",
        "spring.datasource.driverClassName=org.h2.Driver",
        "spring.datasource.username=sa",
        "spring.datasource.password=",
        "spring.liquibase.enabled=true",
        "spring.liquibase.default-schema=plutus_ecollection"
})
class LiquibaseH2IntegrationTest {

    @Autowired
    private DataSource dataSource;

    @Test
    void liquibaseShouldCreatePlutusTables() throws Exception {
        try (Connection conn = dataSource.getConnection()) {
            // Check table 1
            try (ResultSet rs1 = conn.getMetaData().getTables(null, "PLUTUS_ECOLLECTION", "plutus_finacle_transaction_details", null)) {
                assertThat(rs1.next())
                        .withFailMessage("Expected table 'plutus_finacle_transaction_details' to exist")
                        .isTrue();
            }

            // Check table 2
            try (ResultSet rs2 = conn.getMetaData().getTables(null, "PLUTUS_ECOLLECTION", "plutus_client_configuration", null)) {
                assertThat(rs2.next())
                        .withFailMessage("Expected table 'plutus_client_configuration' to exist")
                        .isTrue();
            }
        }
    }
}
